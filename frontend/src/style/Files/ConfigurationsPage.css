/*
 * =================================================================
 * M.A.L. - ConfigurationsPage Styles (Overhauled)
 * =================================================================
 * This stylesheet provides a modern, step-by-step layout for the
 * main application settings page. It features a responsive grid
 * that adapts from columns to a single stack on smaller screens.
*/

.configurations-page {
    display: flex;
    flex-direction: column;
    height: 100%; /* Ensure the page takes full height of its container */
    gap: calc(var(--spacing-unit) * 3);
}

/* --- Header Area --- */
.config-header {
    flex-shrink: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-bottom: calc(var(--spacing-unit) * 2);
    border-bottom: 1px solid var(--color-border);
}

.config-header-text h1 {
    font-size: 1.75rem;
    margin: 0;
    font-weight: 700;
}

.config-header-text p {
    font-size: 1rem;
    color: var(--color-text-secondary);
    margin-top: calc(var(--spacing-unit) * 0.5);
}

/* --- Main Content Layout --- */
.config-main-content {
    flex-grow: 1;
    overflow-y: auto; /* Enables vertical scrolling if content overflows */
    padding: var(--spacing-unit);
    max-height: 60vh;
    margin: calc(var(--spacing-unit) * -1);

    /* Responsive Grid Layout */
    display: grid;
    /* On large screens, create 2 equal-width columns */
    grid-template-columns: repeat(2, 1fr);
    gap: calc(var(--spacing-unit) * 3);
    align-items: start; /* Aligns cards to the top of their grid cell */
}

/* --- Responsive Breakpoint --- */
/* When the screen is 1200px wide or less, switch to a single column */
@media (max-width: 1200px) {
    .config-main-content {
        grid-template-columns: 1fr; /* Stack the cards vertically */
    }
}

/* --- Config Card: The basic building block --- */
.config-card {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-lg);
    display: flex;
    flex-direction: column;
    transition: all 0.3s ease;
    overflow: auto; /* Ensures child elements respect border radius */
    height: 100%; /* Make cards fill the height of the grid row */
    max-height: 50vh;
}

.config-card.disabled-card {
    opacity: 0.5;
    filter: grayscale(50%);
    pointer-events: none;
    user-select: none;
}

.config-card-header {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing-unit) * 1.5);
    font-size: 1.2rem;
    font-weight: 600;
    padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 2.5);
    border-bottom: 1px solid var(--color-border);
    color: var(--color-text-primary);
    background-color: rgba(var(--color-primary-rgb), 0.05);
}

.config-card-body {
    padding: calc(var(--spacing-unit) * 2.5);
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing-unit) * 3);
    flex-grow: 1; /* Allows the body to expand and fill space */
}

.config-section {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-unit);
}

.config-label {
    font-weight: 600;
    font-size: 0.95rem;
    color: var(--color-text-primary);
}

.config-hint {
    font-size: 0.9rem;
    color: var(--color-text-secondary);
    margin: calc(var(--spacing-unit) * -1.5) 0 var(--spacing-unit);
}

.config-hint code {
    background-color: var(--color-background);
    padding: 2px 6px;
    border-radius: var(--border-radius-sm);
    font-family: var(--font-monospace);
    color: var(--color-accent);
}

/* --- NEW: Styles for Automatic Mode Empty State --- */
.config-empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: var(--spacing-unit);
    padding: calc(var(--spacing-unit) * 2);
    height: 100%;
    min-height: 250px; /* Give it some minimum height */
}

.empty-state-icon {
    color: var(--color-primary);
    opacity: 0.5;
    margin-bottom: var(--spacing-unit);
}

.empty-state-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-text-primary);
    margin: 0;
}

.empty-state-text {
    max-width: 80%;
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin-bottom: calc(var(--spacing-unit) * 2);
}

.empty-state-button {
    min-width: 240px;
    font-size: 1rem;
}

/* --- Custom Model Paths List --- */
.custom-paths-list {
    display: grid;
    /* Responsive grid: 2 columns on larger screens, 1 on smaller */
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: calc(var(--spacing-unit) * 2.5) calc(var(--spacing-unit) * 3);
}

.custom-path-entry {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing-unit) * 0.75);
}

.custom-path-label {
    font-weight: 500;
    color: var(--color-text-secondary);
    font-size: 0.9rem;
    font-family: var(--font-monospace);
    text-transform: capitalize;
}

/* --- Footer Area --- */
.config-footer {
    flex-shrink: 0;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: calc(var(--spacing-unit) * 2);
    padding-top: calc(var(--spacing-unit) * 2);
    border-top: 1px solid var(--color-border);
    background-color: var(--color-background); /* Match page background */
}

.config-footer .feedback-message {
    flex-grow: 1;
    margin: 0; /* Remove default margins */
    text-align: center;
}

.save-config-button {
    min-width: 220px;
    font-size: 1rem;
    padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 3);
}
